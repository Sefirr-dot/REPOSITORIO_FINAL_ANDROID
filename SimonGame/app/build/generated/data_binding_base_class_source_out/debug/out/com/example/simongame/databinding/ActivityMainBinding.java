// Generated by view binder compiler. Do not edit!
package com.example.simongame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.simongame.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonBlue;

  @NonNull
  public final Button buttonGreen;

  @NonNull
  public final Button buttonRed;

  @NonNull
  public final Button buttonRestart;

  @NonNull
  public final Button buttonYellow;

  @NonNull
  public final GridLayout gameGrid;

  @NonNull
  public final TextView gameTitle;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView scoreText;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonBlue,
      @NonNull Button buttonGreen, @NonNull Button buttonRed, @NonNull Button buttonRestart,
      @NonNull Button buttonYellow, @NonNull GridLayout gameGrid, @NonNull TextView gameTitle,
      @NonNull ConstraintLayout main, @NonNull TextView scoreText) {
    this.rootView = rootView;
    this.buttonBlue = buttonBlue;
    this.buttonGreen = buttonGreen;
    this.buttonRed = buttonRed;
    this.buttonRestart = buttonRestart;
    this.buttonYellow = buttonYellow;
    this.gameGrid = gameGrid;
    this.gameTitle = gameTitle;
    this.main = main;
    this.scoreText = scoreText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_blue;
      Button buttonBlue = ViewBindings.findChildViewById(rootView, id);
      if (buttonBlue == null) {
        break missingId;
      }

      id = R.id.button_green;
      Button buttonGreen = ViewBindings.findChildViewById(rootView, id);
      if (buttonGreen == null) {
        break missingId;
      }

      id = R.id.button_red;
      Button buttonRed = ViewBindings.findChildViewById(rootView, id);
      if (buttonRed == null) {
        break missingId;
      }

      id = R.id.button_restart;
      Button buttonRestart = ViewBindings.findChildViewById(rootView, id);
      if (buttonRestart == null) {
        break missingId;
      }

      id = R.id.button_yellow;
      Button buttonYellow = ViewBindings.findChildViewById(rootView, id);
      if (buttonYellow == null) {
        break missingId;
      }

      id = R.id.game_grid;
      GridLayout gameGrid = ViewBindings.findChildViewById(rootView, id);
      if (gameGrid == null) {
        break missingId;
      }

      id = R.id.game_title;
      TextView gameTitle = ViewBindings.findChildViewById(rootView, id);
      if (gameTitle == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.score_text;
      TextView scoreText = ViewBindings.findChildViewById(rootView, id);
      if (scoreText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, buttonBlue, buttonGreen,
          buttonRed, buttonRestart, buttonYellow, gameGrid, gameTitle, main, scoreText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
